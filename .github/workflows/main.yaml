name: Artifact Demo - Immutable Artifacts
on:
  workflow_dispatch:

jobs:
  job-a:
    name: Job A - Generate Base Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Create test files
        run: |
          mkdir -p artifact-data
          echo "This is file 1 from Job A" > artifact-data/file1.txt
          echo "This is file 2 from Job A" > artifact-data/file2.txt
          echo "Job A execution time: $(date)" > artifact-data/job-a-info.txt
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          if-no-files-found: error

  job-b:
    name: Job B - Process and Create Job B Artifact
    needs: job-a
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from Job A
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: input-data
      
      - name: Create output directory
        run: mkdir -p job-b-output
      
      - name: Process data
        run: |
          echo "Files downloaded from Job A:"
          ls -la input-data/
          
          # Gerar conteúdo do Job B
          echo "This is a file added by Job B" > job-b-output/job-b-file.txt
          echo "Job B processed at: $(date)" > job-b-output/job-b-info.txt
          
          # Log de processamento
          echo "Job B processed Job A artifacts at $(date)" >> job-b-output/processing-log.txt
      
      - name: Upload Job B artifact
        uses: actions/upload-artifact@v4
        with:
          name: job-b-artifact
          path: job-b-output
          retention-days: 1
          if-no-files-found: error

  job-c:
    name: Job C - Process and Create Job C Artifact
    needs: job-a
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from Job A
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: input-data
      
      - name: Create output directory
        run: mkdir -p job-c-output
      
      - name: Process data
        run: |
          echo "Files downloaded from Job A:"
          ls -la input-data/
          
          # Gerar conteúdo do Job C
          echo "This is a file added by Job C" > job-c-output/job-c-file.txt
          echo "Job C processed at: $(date)" > job-c-output/job-c-info.txt
          
          # Log de processamento
          echo "Job C processed Job A artifacts at $(date)" >> job-c-output/processing-log.txt
      
      - name: Upload Job C artifact
        uses: actions/upload-artifact@v4
        with:
          name: job-c-artifact
          path: job-c-output
          retention-days: 1
          if-no-files-found: error

  job-d:
    name: Job D - Final Processing of All Artifacts
    needs: [job-b, job-c]
    runs-on: ubuntu-latest
    steps:
      - name: Download Job A artifact
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: final/job-a
      
      - name: Download Job B artifact
        uses: actions/download-artifact@v4
        with:
          name: job-b-artifact
          path: final/job-b
      
      - name: Download Job C artifact
        uses: actions/download-artifact@v4
        with:
          name: job-c-artifact
          path: final/job-c
      
      - name: Analyze final artifacts content
        run: |
          echo "=== Final Artifact Structure ==="
          echo "Directory structure:"
          find final -type f | sort
          
          echo -e "\n=== Job A Artifact Contents ==="
          ls -la final/job-a/
          
          echo -e "\n=== Job B Artifact Contents ==="
          ls -la final/job-b/
          
          echo -e "\n=== Job C Artifact Contents ==="
          ls -la final/job-c/
          
          echo -e "\n=== Files from Job A ==="
          cat final/job-a/*.txt
          
          echo -e "\n=== Files from Job B ==="
          cat final/job-b/*.txt
          
          echo -e "\n=== Files from Job C ==="
          cat final/job-c/*.txt
          
          echo -e "\n=== Artifact Validation ==="
          
          # Verificar arquivos do Job A
          if [ -f "final/job-a/file1.txt" ] && [ -f "final/job-a/file2.txt" ]; then
            echo "✅ Job A files present"
          else
            echo "❌ Job A files missing"
          fi
          
          # Verificar arquivo do Job B
          if [ -f "final/job-b/job-b-file.txt" ]; then
            echo "✅ Job B file present"
          else
            echo "❌ Job B file missing"
          fi
          
          # Verificar arquivo do Job C
          if [ -f "final/job-c/job-c-file.txt" ]; then
            echo "✅ Job C file present"
          else
            echo "❌ Job C file missing"
          fi
      
      # Opcional: Criar um artefato consolidado
      - name: Create consolidated artifact
        run: |
          mkdir -p consolidated
          cp -r final/job-a/* consolidated/
          cp -r final/job-b/* consolidated/
          cp -r final/job-c/* consolidated/
          echo "Consolidated by Job D at $(date)" > consolidated/consolidation-info.txt
      
      - name: Upload consolidated artifact
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-artifact
          path: consolidated
          retention-days: 1
          if-no-files-found: error