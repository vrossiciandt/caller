name: Artifact Demo
on:
  workflow_dispatch:
jobs:
  job-a:
    name: Job A - Generate Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Create test files
        run: |
          mkdir -p artifact-data
          echo "This is file 1 from Job A" > artifact-data/file1.txt
          echo "This is file 2 from Job A" > artifact-data/file2.txt
          echo "Job A execution time: $(date)" > artifact-data/job-a-info.txt
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

  job-b:
    name: Job B - Process Artifact
    needs: job-a
    runs-on: ubuntu-latest
    steps:
      - name: Wait before retry
        run: |
          echo "Waiting 2 secs..."
          sleep 2
        shell: bash

      - name: Download artifact from Job A
        id: download-b
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
        continue-on-error: true

      - name: List downloaded files
        run: |
          echo "Files downloaded in Job B:"
          ls -la artifact-data/ || echo "Directory is empty or doesn't exist"
      
      - name: Add Job B content
        run: |
          echo "This is a file added by Job B" > artifact-data/job-b-file.txt
          echo "Job B processed this artifact at: $(date)" >> artifact-data/job-b-info.txt
          
      - name: Upload modified artifact - first attempt
        id: upload-b
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

      - name: Wait before retry upload
        if: steps.upload-b.outcome == 'failure'
        run: |
          echo "::warning::Upload error. Waiting 2 secs to next retry..."
          sleep 2
        shell: bash

      - name: Upload modified artifact - second attempt
        if: steps.upload-b.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

  job-c:
    name: Job C - Process Artifact
    needs: job-a
    runs-on: ubuntu-latest
    steps:
      - name: Wait before retry
        run: |
          echo "Waiting 2 secs..."
          sleep 2
        shell: bash

      - name: Download artifact from Job A
        id: download-c
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
        continue-on-error: true
      
      - name: List downloaded files
        run: |
          echo "Files downloaded in Job C:"
          ls -la artifact-data/ || echo "Directory is empty or doesn't exist"
      
      - name: Add Job C content
        run: |
          echo "This is a file added by Job D" > artifact-data/job-c-file.txt
          echo "Job C processed this artifact at: $(date)" >> artifact-data/job-c-info.txt
          
      - name: Upload modified artifact - first attempt
        id: upload-c
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

      - name: Wait before retry upload
        if: steps.upload-c.outcome == 'failure'
        run: |
          echo "::warning::Upload error. Waiting 2 secs to next retry..."
          sleep 2
        shell: bash

      - name: Upload modified artifact - second attempt
        if: steps.upload-c.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

  job-d:
    name: Job D - Process Artifact
    needs: job-a
    runs-on: ubuntu-latest
    steps:
      - name: Wait before retry
        run: |
          echo "Waiting 2 secs..."
          sleep 2
        shell: bash

      - name: Download artifact from Job A
        id: download-d
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
        continue-on-error: true
      
      - name: List downloaded files
        run: |
          echo "Files downloaded in Job D:"
          ls -la artifact-data/ || echo "Directory is empty or doesn't exist"
      
      - name: Add Job D content
        run: |
          echo "This is a file added by Job D" > artifact-data/job-d-file.txt
          echo "Job D processed this artifact at: $(date)" >> artifact-data/job-d-info.txt
          
      - name: Upload modified artifact - first attempt
        id: upload-d
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

      - name: Wait before retry upload
        if: steps.upload-d.outcome == 'failure'
        run: |
          echo "::warning::Upload error. Waiting 2 secs to next retry..."
          sleep 2
        shell: bash

      - name: Upload modified artifact - second attempt
        if: steps.upload-d.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: job-a-artifact
          path: artifact-data
          retention-days: 1
          overwrite: true
          if-no-files-found: ignore

  job-e:
    name: Job E - Final Processing
    needs: [job-b, job-c, job-d]
    runs-on: ubuntu-latest
    steps:
      - name: Check if artifact exists
        id: verify-output-e
        uses: LIT-Protocol/artifact-exists-action@v0
        with:
          name: job-a-artifact

      - name: Download final artifact - first attempt
        id: download-e
        if: steps.verify-output-e.outputs.exists == 'true'
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: final-data
        continue-on-error: true

      - name: Wait before retry
        if: steps.verify-output-e.outputs.exists == 'true' && steps.download-e.outcome == 'failure'
        run: |
          echo "::warning::Download error. Waiting 2 secs to next retry..."
          sleep 2
        shell: bash

      - name: Download final artifact - second attempt
        if: steps.verify-output-e.outputs.exists == 'true' && steps.download-e.outcome == 'failure'
        uses: actions/download-artifact@v4
        with:
          name: job-a-artifact
          path: final-data
        continue-on-error: true
      
      - name: Analyze final artifact content
        run: |
          echo "Final artifact contents:"
          ls -la final-data/ || echo "Directory is empty or doesn't exist"
          
          if [ -d "final-data" ] && [ "$(ls -A final-data 2>/dev/null)" ]; then
            echo ""
            echo "Contents of files:"
            cat final-data/*.txt || echo "No text files found"
            
            echo ""
            echo "Checking for expected files..."
            
            # Verificar arquivos do Job A
            if [ -f "final-data/file1.txt" ] && [ -f "final-data/file2.txt" ]; then
              echo "✅ Job A files present"
            else
              echo "❌ Job A files missing"
            fi
            
            # Verificar arquivo do Job B
            if [ -f "final-data/job-b-file.txt" ]; then
              echo "✅ Job B file present"
            else
              echo "❌ Job B file missing"
            fi
            
            # Verificar arquivo do Job C
            if [ -f "final-data/job-c-file.txt" ]; then
              echo "✅ Job C file present"
            else
              echo "❌ Job C file missing"
            fi
            # Verificar arquivo do Job D
            if [ -f "final-data/job-d-file.txt" ]; then
              echo "✅ Job D file present"
            else
              echo "❌ Job D file missing"
            fi
          else
            echo "::warning::No files to analyze"
          fi